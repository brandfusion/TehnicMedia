@using Dynamicweb.Frontend
@using System.Text.RegularExpressions
@Include("../../Custom/GlobalVariables.cshtml")
@Include("../../Includes/ArticleHelper.cshtml")

<p>Total articole: @GetInteger("ItemPublisher:Items.TotalCount")</p>

@if(GetBoolean("ItemPublisher:Items.Any")){
  	foreach(var item in GetLoop("ItemPublisher:Items.List")){
      string articleTitle = item.GetString("ItemPublisher:Item.Titlu.Value");
      string itemAuthor = "";
      var articleDate = item.GetDate("ItemPublisher:Item.Data");
      string articleLink = item.GetString("ItemPublisher:Item.Url");
      string articleImage = item.GetString("ItemPublisher:Item.ImaginePrincipala.Value");
      string articleExcerpt = item.GetString("ItemPublisher:Item.Sumar");
      string articleVisits = item.GetString("ItemPublisher:Item.Visits.Value");
      string itemAutori = item.GetString("ItemPublisher:Item.Autori.Value");
      string itemSections = "";
	bool itemConditionVisits = item.GetBoolean("ItemPublisher:Item.Vizite");
      string articleViews = GetString("Item.Visits");


      List<Autor> articleAutori = GetAutori(itemAutori);
      List<Sectiune> articleSections = GetSectiuni(itemSections);
      articleExcerpt = Regex.Replace(articleExcerpt, @"<[^>]*>", String.Empty);
      @Include("../../Lists/1col-image-summary.cshtml")

	}

}


@{
  int previousPage = GetInteger("ItemPublisher:Items.Paging.PrevPage");
  int currentPage = GetInteger("ItemPublisher:Items.Paging.CurrentPage");
  int globalPageID = GetInteger("ItemPublisher:Global.PageId");
  int lastPage = GetInteger("ItemPublisher:Items.Paging.TotalPages");
}



@Include("Includes/Pagination.cshtml")