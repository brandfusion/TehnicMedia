@Include("Layout.cshtml")

<div class="col-xs-4 ">
  	<div class="col-parteneri">
		@RenderImage()
  	</div>
</div>



@helper RenderImage()
{
	if (!string.IsNullOrEmpty(GetString("Item.Image")))
	{
		var image = System.Web.HttpContext.Current.Server.UrlEncode(GetString("Item.Image"));
		
		<!-- Choosing the smallest possible width that will work with responsive sizes -->
		string optimizedwidth = "1280";

		switch (GetString("Item.Width")){
			case "12":
				optimizedwidth = "1280";
				break;
			case "9":
				optimizedwidth = "960";
				break;
			case "6":
				optimizedwidth = "722";
				break;
			case "3":
				optimizedwidth = "722";
				break;
			case "8":
				optimizedwidth = "960";
				break;
			case "4":
				optimizedwidth = "722";
				break;
		}

		string imageSrc = "/Admin/Public/GetImage.ashx?width=" + optimizedwidth + "&amp;crop=7&amp;Compression=75&amp;image=" + image;
		string optimizedheight = "";
		
		if(!GetBoolean("Item.KeepImageAspectRatio")){
			optimizedheight = ((Convert.ToInt32(optimizedwidth)/16)*9).ToString();
		}

		if(GetString("Item.ImageStyle") == "ball") {
			optimizedwidth = "500";
			optimizedheight = "500";
		}

		if(optimizedheight != "") {
			imageSrc = imageSrc + "&amp;height=" + optimizedheight;
		}
		
		
		if(string.IsNullOrEmpty(GetString("Item.Link")))
		{
			<div class="img-responsive dw-std-image">
				<img class="content-image img-responsive" width="@optimizedwidth" height="@optimizedheight" style="@GetImageBorderCss()" src="@imageSrc" alt=""/>
			</div>
		} else {
		
			<div class="img-responsive dw-std-image">
				<a href='@GetString("Item.Link")' target="_parent" ><img class="content-image img-responsive" width="@optimizedwidth" height="@optimizedheight" style="@GetImageBorderCss()" src="@imageSrc" alt=""/></a>
			</div>
			
		}
	}
}



@functions {
	private string GetImageBorderCss()
	{
		if (GetString("Item.ImageStyle") == "cover")
		{
			return "padding: 8px";
		}
		else if (GetString("Item.ImageStyle") == "cover-border")
		{
			return "padding: 4px; border: 1px solid #e1e1e1; border-radius: 0px !important";
		}
		else if (GetString("Item.ImageStyle") == "frame")
		{
			return "padding: 6px; border: 1px solid #e1e1e1; border-radius: 0px !important";
		}
		else if (GetString("Item.ImageStyle") == "rounded")
		{
			return "border-radius: 8px !important";
		}
		else if (GetString("Item.ImageStyle") == "ball")
		{
			return "border-radius: 1000px !important";
		}
		else if (GetString("Item.ImageStyle") == "shadow")
		{
			return "box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.2)";
		}
		else
		{
			return string.Empty;
		}
	}
}